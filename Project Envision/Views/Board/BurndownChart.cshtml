@{
    ViewData["Title"] = "Burndown Chart";
    Layout = "~/Views/Shared/_MainPageLayout.cshtml";
}

<link rel="stylesheet" href="~/css/Inputs.css" />
<link rel="stylesheet" href="~/css/BurndownChart.css" />


<div class="box">

    <div class="options">
        <div class="option">
            <span>Sprint</span>
            @(Html.DevExtreme().SelectBox()
                .DataSource(new[] {
                    SeriesType.Line,
                    SeriesType.StackedLine,
                    SeriesType.FullStackedLine
                })
                .Value(SeriesType.Line)
                .OnValueChanged(@<text>
                    function (e) {
                        $("#line-chart").dxChart("option", "commonSeriesSettings.type", e.value);
                    }
                </text>)
            )
        </div>
    </div>

    @(Html.DevExtreme().Chart()
        .DataSource(new List<object> {
            new { Date = "3/1", StoryPoints = 59.8 },
            new { Date = "3/2", StoryPoints = 74.2 },
            new { Date = "3/3", StoryPoints = 40.0 },
            new { Date = "3/4", StoryPoints = 22.6 },
            new { Date = "3/5", StoryPoints = 19.0 },
            new { Date = "3/6", StoryPoints = 6.1 }
        })

        .Series(s =>
        {
            s.Add().ValueField("StoryPoints").Name("Story-Points");

        })

        .CommonSeriesSettings(s => s
            .ArgumentField("Date")
            .Type(SeriesType.Line)
            .Label(l => l
                .Visible(true)
                .Connector(c => c.Visible(true))
            )
        )

        .Export(e => e.Enabled(true))
        .Tooltip(t => t.Enabled(true))
    )

</div>