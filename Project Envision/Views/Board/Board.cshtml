@model Project_Envision.Models.GroupMembers
@{
    ViewData["Title"] = "Board";
    Layout = "~/Views/Shared/_MainPageLayout.cshtml";
}

<link rel="stylesheet" href="~/css/Board.css" />
<link rel="stylesheet" href="~/css/Buttons.css" />
<link rel="stylesheet" href="~/css/Inputs.css" />

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="bootstrap/js/bootstrap.min.js"></script>
<script src="https://kit.fontawesome.com/1e6384ea85.js" crossorigin="anonymous"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" type="text/javascript"></script>

<div class="headerContainer">

    <div class="logoContainer">
        <div class="containerContent">
            <h1>Board Page</h1>
            @{
                for (int k = 0; k < GetSprintProperties.getSprint_IdList.Count(); k++)
                {
                    if (GetSprintProperties.currentSprint_Id == GetSprintProperties.getSprint_IdList[k])
                    {
                        <p><span class="sprintSpans">Sprint Name: </span>@GetSprintProperties.getSprint_NameList[k]</p>

                        <p><span class="sprintSpans">Start Time: </span>@Convert.ToDateTime(GetSprintProperties.getSprint_StartList[k]).ToString("MM/dd/yyyy hh:mm tt")</p>

                        <p><span class="sprintSpans">End Time: </span>@Convert.ToDateTime(GetSprintProperties.getSprint_EndList[k]).ToString("MM/dd/yyyy hh:mm tt")</p>

                        <p id="counter"></p> //displays counter in view

                        <script>

                        var countDownDate = new Date("@Convert.ToDateTime(GetSprintProperties.getSprint_EndList[k]).ToString("MM/dd/yyyy")").getTime();

                        var x = setInterval(function () {

                        var now = new Date().getTime();

                        var distance = countDownDate - now;

                        var days = Math.floor(distance / (1000 * 60 * 60 * 24));

                        document.getElementById("counter").innerHTML = "Time Remaining: " + days + " days";

                        if (distance < 0) {
                          clearInterval(x);
                          document.getElementById("counter").innerHTML = "Due Tonight At: 11:59 PM";
                       }
                         }, 1000);

                        </script>



                    }
                }
            }

        </div>
    </div>
</div>

<div class="box">
    <table style="color: white;">
        <tr padding: 20px;>
            <th>Backlog</th>
            <th>In Progress</th>
            <th>Testing</th>
            <th>Done</th>
        </tr>
        @{
            if (boardModel.m_TaskIdList.Count != 0)
            {

                for (int i = 0; i < boardModel.m_TaskIdList.Count; i++)
                {
                    if (GetSprintProperties.currentSprint_Id == boardModel.m_SprintIdList[i])
                    {
                        <tr>
                            @if (boardModel.m_TaskLocationList[i] == "Backlog")
                            {
                                <td id="Backlog" ondrop="location.href='@Url.Action("setLocation", "DragNDrop", new { Location = "Backlog" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                        <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "Backlog" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                            <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                        </div>
                                    </div>
                                </td>
                            }
                            else
                            {
                                <td id="Backlog" ondrop="location.href='@Url.Action("setLocation", "DragNDrop", new { Location = "Backlog" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                    </div>
                                </td>
                            }

                            @if (boardModel.m_TaskLocationList[i] == "In Progress")
                            {
                                <td id="In Progress" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { Location = "In Progress" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                        <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "In Progress" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                            <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                        </div>
                                    </div>

                                </td>
                            }
                            else
                            {
                                <td id="In Progress" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { Location = "In Progress" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                    </div>

                                </td>
                            }

                            @if (boardModel.m_TaskLocationList[i] == "Testing")
                            {
                                <td id="Testing" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { location = "Testing" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                        <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "Testing" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                            <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                        </div>
                                    </div>
                                </td>
                            }
                            else
                            {
                                <td id="Testing" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { location = "Testing" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                    </div>
                                </td>
                            }

                            @if (boardModel.m_TaskLocationList[i] == "Done")
                            {
                                <td id="Done" ondrop="location.href = '@Url.Action("setLocation", "DragNDrop", new { location = "Done" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                        <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "Done" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                            <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                        </div>
                                    </div>
                                </td>
                            }
                            else
                            {
                                <td id="Done" ondrop="location.href = '@Url.Action("setLocation", "DragNDrop", new { location = "Done" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                    </div>
                                </td>
                            }

                        </tr>
                    }
                }
            }
        }

    </table>
    </div>

@if (ViewBag.Message != null)
{
    <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Message");
            };
    </script>
}


<script>

    function allowDrop(ev) {
        ev.preventDefault();
    }

    function drag(ev) {
        ev.dataTransfer.setData("text", ev.target.id);
    }

    function drop(ev) {
        ev.preventDefault();
        var data = ev.dataTransfer.getData("text");
        ev.target.appendChild(document.getElementById(data));
    }

    

</script>
