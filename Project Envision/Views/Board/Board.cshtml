@model Project_Envision.Models.GroupMembers
@{
    ViewData["Title"] = "Board";
    Layout = "~/Views/Shared/_MainPageLayout.cshtml";
}

<link rel="stylesheet" href="~/css/Board.css" />
<link rel="stylesheet" href="~/css/Buttons.css" />
<link rel="stylesheet" href="~/css/Inputs.css" />

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="bootstrap/js/bootstrap.min.js"></script>
<script src="https://kit.fontawesome.com/1e6384ea85.js" crossorigin="anonymous"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

<div class="headerContainer">
    <button type="button" onclick="location.href='@Url.Action("AddTeammate", "GroupMember")'" class="buttonStyle addFriendButton">Add Friend</button>

    <div class="logoContainer">
        <div id="circle"></div>
        <div id="logo"></div>
    </div>

    <button type="button" class="buttonStyle removeFriendButton" onclick="location.href='@Url.Action("RemoveTeammate", "GroupMember")'">Remove Friend</button>
    
</div>

<div class="box">
    <table style="color: white;">
        <tr padding: 20px;>
            <th>Backlog</th>
            <th>In Progress</th>
            <th>Testing</th>
            <th>Done</th>
        </tr>
        @{
            if (boardModel.m_TaskIdList.Count != 0)
            {
                for (int i = 0; i < boardModel.m_TaskIdList.Count; i++)
                {
                    <tr>
                        @if (boardModel.m_TaskLocationList[i] == "Backlog")
                        {
                            <td id="Backlog" ondrop="location.href='@Url.Action("setLocation", "DragNDrop", new { Location = "Backlog" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                    <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "Backlog" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                        <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                    </div>
                                </div>
                            </td>
                        }
                        else
                        {
                            <td id="Backlog" ondrop="location.href='@Url.Action("setLocation", "DragNDrop", new { Location = "Backlog" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                </div>
                            </td>
                        }

                        @if (boardModel.m_TaskLocationList[i] == "In Progress")
                        {
                            <td id="In Progress" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { Location = "In Progress" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                    <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "In Progress" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                        <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                    </div>
                                </div>

                            </td>
                        }
                        else
                        {
                            <td id="In Progress" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { Location = "In Progress" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                </div>

                            </td>
                        }

                        @if (boardModel.m_TaskLocationList[i] == "Testing")
                        {
                            <td id="Testing" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { location = "Testing" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                    <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "Testing" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                        <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                    </div>
                                </div>
                            </td>
                        }
                        else
                        {
                            <td id="Testing" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { location = "Testing" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                </div>
                            </td>
                        }

                        @if (boardModel.m_TaskLocationList[i] == "Done")
                        {
                            <td id="Done" ondrop="location.href = '@Url.Action("setLocation", "DragNDrop", new { location = "Done" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                    <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "Done" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                        <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                    </div>
                                </div>
                            </td>
                        }
                        else
                        {
                            <td id="Done" ondrop="location.href = '@Url.Action("setLocation", "DragNDrop", new { location = "Done" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                </div>
                            </td>
                        }

                    </tr>
                }
            }
        }

    </table>
</div>

@*<form method="post" asp-action="Index" asp-controller="Home">
    <div id="removeFriendModal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Remove Friend</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="secondaryInput">
                        <label>Choose Friend to Remove</label>
                        <div class="selectionStyle">
                            <select>
                                <option>test</option>
                                <option>test2</option>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="buttonStyle">Remove Friend</button>
                        <button type="button" class="buttonStyle" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>*@

<script type="text/javascript">
    $(document).ready(function () {
        $("#btnclick").click(function () {
            $("#addTeammate").modal('show');
        });

        $("#HidebtnModal").click(function () {
            $("#addTeammate").modal('hide');
        });
    });
</script>

@if (ViewBag.Message != null)
{
    <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.Message");
            };
    </script>
}

















@*<div class="headerContainer">
        <button type="button" class="buttonStyle addFriendButton" data-toggle="modal" data-target="#addFriendModal">Add Friend</button>


        <div id="addFriendModal" class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add Friend</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form method="post" id="addMember" asp-action="inviteGroupMember" asp-controller="GroupMember">
                            <div class="secondaryInput">
                                <label asp-for="username">Group Member's Username:</label>
                                <input asp-for="username" class="secondaryInput" type="text" autocomplete="off" placeholder="Group Member's Username" required />
                                <span asp-validation-for="username" class="text-danger"></span>
                            </div>
                        </form>
                        <div class="modal-footer">
                            <button type="submit" form="addMember" class="buttonStyle">Add GroupMember</button>
                            <button type="button" class="buttonStyle" data-dismiss="modal">Close</button>
                        </div>

                    </div>
                </div>
            </div>
        </div>


        <div class="logoContainer">
            <div id="circle"></div>
            <div id="logo"></div>
        </div>
        <button type="button" class="buttonStyle removeFriendButton" data-toggle="modal" data-target="#removeFriendModal">Remove Friend</button>
        <form method="post">
            <div id="removeFriendModal" class="modal" tabindex="-1" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Remove Friend</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="secondaryInput">
                                <label>Choose Group Member to Remove</label>

                                <select asp-for="username">
                                    @{
                                        for (int i = 0; i < boardModel.m_UsernameList.Count(); i++)
                                        {
                                            <option>@boardModel.m_UsernameList[i]</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="buttonStyle" value="removeGroupMember">Remove Group Member</button>
                                <button type="button" class="buttonStyle" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>

    </div>

    <div class="box">
        <table style="color: white;">
            <tr padding: 20px;>
                <th>Backlog</th>
                <th>In Progress</th>
                <th>Testing</th>
                <th>Done</th>
            </tr>
            @{
                if (boardModel.m_TaskIdList.Count != 0)
                {
                    for (int i = 0; i < boardModel.m_TaskIdList.Count; i++)
                    {
                        <tr>
                            @if (boardModel.m_TaskLocationList[i] == "Backlog")
                            {
                                <td id="Backlog" ondrop="location.href='@Url.Action("setLocation", "DragNDrop", new { Location = "Backlog" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                        <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "Backlog" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                            <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                        </div>
                                    </div>
                                </td>
                            }
                            else
                            {
                                <td id="Backlog" ondrop="location.href='@Url.Action("setLocation", "DragNDrop", new { Location = "Backlog" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                    </div>
                                </td>
                            }

                            @if (boardModel.m_TaskLocationList[i] == "In Progress")
                            {
                                <td id="In Progress" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { Location = "In Progress" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                        <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "In Progress" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                            <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                        </div>
                                    </div>

                                </td>
                            }
                            else
                            {
                                <td id="In Progress" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { Location = "In Progress" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                    </div>

                                </td>
                            }

                            @if (boardModel.m_TaskLocationList[i] == "Testing")
                            {
                                <td id="Testing" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { location = "Testing" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                        <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "Testing" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                            <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                        </div>
                                    </div>
                                </td>
                            }
                            else
                            {
                                <td id="Testing" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { location = "Testing" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                    </div>
                                </td>
                            }

                            @if (boardModel.m_TaskLocationList[i] == "Done")
                            {
                                <td id="Done" ondrop="location.href = '@Url.Action("setLocation", "DragNDrop", new { location = "Done" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                        <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "Done" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                            <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                        </div>
                                    </div>
                                </td>
                            }
                            else
                            {
                                <td id="Done" ondrop="location.href = '@Url.Action("setLocation", "DragNDrop", new { location = "Done" })', drop(event)" ondragover="allowDrop(event)">
                                    <div>
                                    </div>
                                </td>
                            }

                        </tr>
                    }
                }
            }

        </table>
    </div>

    <form method="post" asp-action="Index" asp-controller="Home">
        <div id="removeFriendModal" class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Remove Friend</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="secondaryInput">
                            <label>Choose Friend to Remove</label>
                            <div class="selectionStyle">
                                <select>
                                    <option>test</option>
                                    <option>test2</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="buttonStyle">Remove Friend</button>
                            <button type="button" class="buttonStyle" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>


    <script>

        function allowDrop(ev) {
            ev.preventDefault();
        }

        function drag(ev) {
            ev.dataTransfer.setData("text", ev.target.id);
        }

        function drop(ev) {
            ev.preventDefault();
            var data = ev.dataTransfer.getData("text");
            ev.target.appendChild(document.getElementById(data));
        }

    </script>


    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
        window.onload = function () {
            alert("@ViewBag.Message");
        };
        </script>
    }*@
