@{
    ViewData["Title"] = "Board";
    Layout = "~/Views/Shared/_MainPageLayout.cshtml";
}

<link rel="stylesheet" href="~/css/Board.css" />

<div class="logoContainer">
    <div id="circle"></div>
    <div id="logo"></div>
</div>

<div class="box">
    <table style="color: white;">
        <tr padding: 20px;>
            <th>Backlog</th>
            <th>In Progress</th>
            <th>Testing</th>
            <th>Done</th>
        </tr>


        @{
            if (BoardModel.m_TaskIdlist.Count != 0)
            {
                for (int i = 0; i < BoardModel.m_TaskIdlist.Count; i++)
                {
                <tr>
                    @if (BoardModel.m_TaskLocationlist[i] == "Backlog")
                    {
                    <td id="Backlog" ondrop="location.href='@Url.Action("setLocation", "DragNDrop", new { Location = "Backlog" })', drop(event)" ondragover="allowDrop(event)">
                        <div>
                            <div class="boardCard" ondragend="location.href='@Url.Action("setTaskId", "DragNDrop", new { taskid = @BoardModel.m_TaskIdlist[i] })', location.href='@Url.Action("setCurrentLocation", "DragNDrop", new { CurrentLocation = "Backlog"})'" draggable="true" ondragstart="drag(event)" id=@BoardModel.m_TaskIdlist[i]>
                                <p class="cardContent">@BoardModel.m_Tasklist[i]</p>
                            </div>
                        </div>
                    </td>
                    }
                    else
                    {
                    <td id="Backlog" ondrop="location.href='@Url.Action("setLocation", "DragNDrop", new { Location = "Backlog" })', drop(event)" ondragover="allowDrop(event)">
                        <div>
                        </div>
                    </td>
                    }

                    @if (BoardModel.m_TaskLocationlist[i] == "In Progress")
                    {
                    <td id="In Progress" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { Location = "In Progress" })', drop(event)" ondragover="allowDrop(event)">
                        <div>
                            <div class="boardCard" ondragend="location.href='@Url.Action("setTaskId", "DragNDrop", new { taskid = @BoardModel.m_TaskIdlist[i] })', location.href='@Url.Action("setCurrentLocation", "DragNDrop", new { CurrentLocation = "In Progress"})'" draggable="true" ondragstart="drag(event)" id=@BoardModel.m_TaskIdlist[i]>
                                <p class="cardContent">@BoardModel.m_Tasklist[i]</p>
                            </div>
                        </div>

                    </td>
                    }
                    else
                    {
                    <td id="In Progress" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { Location = "In Progress" })', drop(event)" ondragover="allowDrop(event)">
                        <div>
                        </div>

                    </td>
                    }

                    @if (BoardModel.m_TaskLocationlist[i] == "Testing")
                    {
                    <td id="Testing" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { location = "Testing" })', drop(event)" ondragover="allowDrop(event)">
                        <div>
                            <div class="boardCard" ondragend="location.href='@Url.Action("setTaskId", "DragNDrop", new { taskid = @BoardModel.m_TaskIdlist[i] })', location.href='@Url.Action("setCurrentLocation", "DragNDrop", new { CurrentLocation = "Testing"})'" draggable="true" ondragstart="drag(event)" id=@BoardModel.m_TaskIdlist[i]>
                                <p class="cardContent">@BoardModel.m_Tasklist[i]</p>
                            </div>
                        </div>
                    </td>
                    }
                    else
                    {
                    <td id="Testing" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { location = "Testing" })', drop(event)" ondragover="allowDrop(event)">
                        <div>
                        </div>
                    </td>
                    }

                    @if (BoardModel.m_TaskLocationlist[i] == "Done")
                    {
                    <td id="Done" ondrop="location.href = '@Url.Action("setLocation", "DragNDrop", new { location = "Done" })', drop(event)" ondragover="allowDrop(event)">
                        <div>
                            <div class="boardCard" ondragend="location.href='@Url.Action("setTaskId", "DragNDrop", new { taskid = @BoardModel.m_TaskIdlist[i] })', location.href='@Url.Action("setCurrentLocation", "DragNDrop", new { CurrentLocation = "Done"})'" draggable="true" ondragstart="drag(event)" id=@BoardModel.m_TaskIdlist[i]>
                                <p class="cardContent">@BoardModel.m_Tasklist[i]</p>
                            </div>
                        </div>
                    </td>
                    }
                    else
                    {
                    <td id="Done" ondrop="location.href = '@Url.Action("setLocation", "DragNDrop", new { location = "Done" })', drop(event)" ondragover="allowDrop(event)">
                        <div>
                        </div>
                    </td>
                    }
                    
                </tr>
                }
            }
            }

                </table>
</div>

<script>

    function allowDrop(ev) {
        ev.preventDefault();
    }

    function drag(ev) {
        ev.dataTransfer.setData("text", ev.target.id);
    }

    function drop(ev) {
        ev.preventDefault();
         var data = ev.dataTransfer.getData("text");
        ev.target.appendChild(document.getElementById(data));
    }

</script>