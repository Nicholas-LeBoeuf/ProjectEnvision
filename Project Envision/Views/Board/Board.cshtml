@{
    ViewData["Title"] = "Board";
    Layout = "~/Views/Shared/_MainPageLayout.cshtml";
}

<link rel="stylesheet" href="~/css/Board.css" />
<link rel="stylesheet" href="~/css/Buttons.css" />
<link rel="stylesheet" href="~/css/Inputs.css" />

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous" />
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

<div class="headerContainer">
    <button type="button" class="buttonStyle addFriendButton" data-toggle="modal" data-target="#addFriendModal">Add Friend</button>
    <div class="logoContainer">
        <div id="circle"></div>
        <div id="logo"></div>
    </div>
    <button type="button" class="buttonStyle removeFriendButton" data-toggle="modal" data-target="#removeFriendModal">Remove Friend</button>
</div>

<div class="box">
    <table style="color: white;">
        <tr padding: 20px;>
            <th>Backlog</th>
            <th>In Progress</th>
            <th>Testing</th>
            <th>Done</th>
        </tr>
        @{
            if (boardModel.m_TaskIdList.Count != 0)
            {
                for (int i = 0; i < boardModel.m_TaskIdList.Count; i++)
                {
                    <tr>
                        @if (boardModel.m_TaskLocationList[i] == "Backlog")
                        {
                            <td id="Backlog" ondrop="location.href='@Url.Action("setLocation", "DragNDrop", new { Location = "Backlog" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                    <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "Backlog" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                        <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                    </div>
                                </div>
                            </td>
                        }
                        else
                        {
                            <td id="Backlog" ondrop="location.href='@Url.Action("setLocation", "DragNDrop", new { Location = "Backlog" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                </div>
                            </td>
                        }

                        @if (boardModel.m_TaskLocationList[i] == "In Progress")
                        {
                            <td id="In Progress" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { Location = "In Progress" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                    <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "In Progress" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                        <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                    </div>
                                </div>

                            </td>
                        }
                        else
                        {
                            <td id="In Progress" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { Location = "In Progress" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                </div>

                            </td>
                        }

                        @if (boardModel.m_TaskLocationList[i] == "Testing")
                        {
                            <td id="Testing" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { location = "Testing" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                    <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "Testing" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                        <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                    </div>
                                </div>
                            </td>
                        }
                        else
                        {
                            <td id="Testing" ondrop="location.href= '@Url.Action("setLocation", "DragNDrop", new { location = "Testing" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                </div>
                            </td>
                        }

                        @if (boardModel.m_TaskLocationList[i] == "Done")
                        {
                            <td id="Done" ondrop="location.href = '@Url.Action("setLocation", "DragNDrop", new { location = "Done" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                    <div class="boardCard" ondragend="location.href='@Url.Action("setTaskInfo", "DragNDrop", new { taskid = @boardModel.m_TaskIdList[i], CurrentLocation = "Done" })'" draggable="true" ondragstart="drag(event)" id=@boardModel.m_TaskIdList[i]>
                                        <p class="cardContent">@boardModel.m_TaskList[i]</p>
                                    </div>
                                </div>
                            </td>
                        }
                        else
                        {
                            <td id="Done" ondrop="location.href = '@Url.Action("setLocation", "DragNDrop", new { location = "Done" })', drop(event)" ondragover="allowDrop(event)">
                                <div>
                                </div>
                            </td>
                        }

                    </tr>
                }
            }
        }

    </table>
</div>


<form method="post" asp-action="Index" asp-controller="Home">
    <div id="addFriendModal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Friend</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="secondaryInput">
                        <label>Friends Username:</label>
                        <input class="secondaryInput" type="text" autocomplete="off" placeholder="Friends Username" required="" />
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="buttonStyle">Add Friend</button>
                        <button type="button" class="buttonStyle" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<form method="post" asp-action="Index" asp-controller="Home">
    <div id="removeFriendModal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Remove Friend</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="secondaryInput">
                        <label>Choose Friend to Remove</label>
                        <div class="selectionStyle">
                            <select>
                                <option>test</option>
                                <option>test2</option>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="buttonStyle">Remove Friend</button>
                        <button type="button" class="buttonStyle" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>


<script>

    function allowDrop(ev) {
        ev.preventDefault();
    }

    function drag(ev) {
        ev.dataTransfer.setData("text", ev.target.id);
    }

    function drop(ev) {
        ev.preventDefault();
        var data = ev.dataTransfer.getData("text");
        ev.target.appendChild(document.getElementById(data));
    }

</script>