@model Project_Envision.Models.SprintPropertiesModel
@{
    ViewData["Title"] = "Sprint";
    Layout = "~/Views/Shared/_MainPageLayout.cshtml";
}

<link rel="stylesheet" href="~/css/Sprint.css" />
<link rel="stylesheet" href="~/css/Buttons.css" />
<link rel="stylesheet" href="~/css/Inputs.css" />

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous" />
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

<style>
    body, th,p {
        color: @BoardSettingsItems.m_TextColor;
    }
    td{
        color: @BoardSettingsItems.m_TextColor;
        background-color: @BoardSettingsItems.m_CardColorRGBA;
    }
</style>

<div class="box">
    <div class="tab">
        <button type="button" class="createSprintButton" onclick="location.href='@Url.Action("CreateSprint", "Sprint")'">Create Sprint</button>

        @{
            for (int i = 0; i < GetSprintProperties.getSprint_IdList.Count(); i++)
            {
                <button class="tablinks" onclick="openTab(event, '@GetSprintProperties.getSprint_IdList[i]')">@GetSprintProperties.getSprint_NameList[i]</button>
            }
        }
    </div>

    @{
        for (int i = 0; i < GetSprintProperties.getSprint_IdList.Count(); i++)
        {
        <div id=@GetSprintProperties.getSprint_IdList[i] class="tabcontent">
            <div class="deleteEditButtonContainer">
                @{
                    if (GetSprintProperties.getSprint_IdList[i] == GetSprintProperties.currentSprint_Id)
                    {
                        <button type="submit" disabled class="disabledButton deleteSprintButton" onclick="location.href='@Url.Action("deleteSprint", "Sprint", new { sprintId = GetSprintProperties.getSprint_IdList[i]})'">Delete Sprint</button>
                    }
                    else
                    {
                        <button type="submit" class="buttonStyle deleteSprintButton" onclick="location.href='@Url.Action("deleteSprint", "Sprint", new { sprintId = GetSprintProperties.getSprint_IdList[i]})'">Delete Sprint</button>
                    }
                }
                <p>@GetSprintProperties.getSprint_DescriptionList[i]</p>
                <button type="button" class="buttonStyle editSprintButton" onclick="location.href='@Url.Action("collect_Sprint_Info", "Sprint", new { sprintId = GetSprintProperties.getSprint_IdList[i]})'">Edit Sprint</button>
            </div>
            <br />
            <br />
         
            <div class="tableHead">
                <table cellpadding="0" cellspacing="0" border="0">
                    <thead>
                        <tr>
                            <th>Task Name</th>
                            <th>Task Description</th>
                            <th>Assigned To</th>
                            <th>Story Points</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                </table>
            </div>

            <div class="tableContent">
                <table cellpadding="0" cellspacing="0" border="0">
                    <tbody>
                        @for (int j = 0; j < boardModel.m_TaskIdList.Count(); j++)
                        {
                            if (GetSprintProperties.getSprint_IdList[i] == boardModel.m_SprintIdList[j])
                            {

                                <tr>
                                    <td>@boardModel.m_TaskList[j]</td>
                                    <td>@boardModel.m_TaskDescriptList[j]</td>
                                    <td>@boardModel.m_AssigneeList[j]</td>
                                    <td>@boardModel.m_TaskPointsList[j]</td>
                                    <td>@boardModel.m_TaskLocationList[j]</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        }
    }

</div>


<script>
    function openTab(evt, tabName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";
    }
</script>

@if (ViewBag.Message != null)
{
    <script type="text/javascript">
    window.onload = function () {
        alert("@ViewBag.Message");
    };
    </script>
}